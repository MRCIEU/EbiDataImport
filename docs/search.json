[{"path":"https://mrcieu.github.io/GwasDataImport/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Gibran Hemani Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/articles/ebi_workflow.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"EBI upload pipeline","text":"Download format data metadata EBI dataset Upload formatted EBI data metadata OpenGWAS API Determine datasets EBI present OpenGWAS. Allow ‘blacklist’ EBI datasets ignore. (TODO)","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/articles/ebi_workflow.html","id":"complete-workflow-for-one-dataset","dir":"Articles","previous_headings":"","what":"Complete workflow for one dataset","title":"EBI upload pipeline","text":"Now delete:","code":"# library(devtools) # load_all() # ieugwasr::select_api(\"dev2\")  # Authorise ieugwasr::get_access_token()  # This is a small file, good for testing ebi_id <- \"GCST005522\" x <- EbiDataset$new(     ebi_id = ebi_id,      ftp_path = get_ftp_path(ebi_id),     igd_id = \"ebi-a-EBITEST\",     wd = paste0(\"uploads/\", ebi_id) ) x$pipeline() x$api_gwasdata_delete()"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/ebi_workflow.html","id":"running-each-step-individually","dir":"Articles","previous_headings":"","what":"Running each step individually","title":"EBI upload pipeline","text":"","code":"ebi_id <- \"GCST005522\" x <- EbiDataset$new(     ebi_id = ebi_id,      ftp_path = get_ftp_path(ebi_id),     igd_id = \"ebi-a-EBITEST\",     wd = paste0(\"uploads/\", ebi_id) ) x$download_dataset() x$format_ebi_dataset() x$determine_columns(params=list(chr_col=1, snp_col=2, pos_col=3, oa_col=4, ea_col=5, eaf_col=6, beta_col=7, se_col=8, pval_col=9), gwas_file=x$gwas_out1) x$format_dataset(gwas_file=x$gwas_out1) x$organise_metadata() x$api_metadata_upload() x$api_gwasdata_upload() x$api_gwasdata_delete()"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/ebi_workflow.html","id":"workflow-for-all-datasets","dir":"Articles","previous_headings":"","what":"Workflow for all datasets","title":"EBI upload pipeline","text":"get list datasets need imported:","code":"ignore_list <- scan(system.file(package=\"EbiDataImport\", \"extdata/ebi_ignore_list.txt\"), character()) newdats <- determine_new_datasets(blacklist=ignore_list) newdats <- being_processed(newdats) %>% subset(., need) ignore <- list() for(i in 2:nrow(newdats)) {     message(newdats$ebi_id[i])     x <- EbiDataset$new(         ebi_id = newdats$ebi_id[i],          ftp_path = newdats$path[i],         wd = paste0(\"uploads/\", newdats$ebi_id[i])     )     o <- x$pipeline()     if(! \"NULL\" %in% class(o))     {         ignore[[newdats$ebi_id[i]]] <- o     }     rm(x) }"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/ebi_workflow.html","id":"lookup-build","dir":"Articles","previous_headings":"","what":"Lookup build","title":"EBI upload pipeline","text":"","code":"x <- EbiDataset$new(\"GCST000755\", ftp_path=get_ftp_path(\"GCST000755\")) x$download_dataset() x$format_dataset()"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/ebi_workflow.html","id":"suhre-proteins","dir":"Articles","previous_headings":"","what":"Suhre proteins","title":"EBI upload pipeline","text":"Conclusion - seem missing standard errors? Need batch processing.","code":"ignore_list <- scan(system.file(package=\"EbiDataImport\", \"extdata/ebi_ignore_list.txt\"), character()) newdats <- determine_new_datasets(blacklist=ignore_list, exclude = FALSE) suhre <- subset(newdats, grepl(\"Suhr\", path)) suhre <- separate(suhre, path, sep=\"/\", into=c(\"p1\",\"p2\",\"p3\"), remove=F) temp <- do.call(rbind, strsplit(suhre$p3, split=\"_\")) suhre$igd_id <- paste0(\"prot-c-\", temp[,1], \"_\", temp[,2]) suhre$igd_id  traitinfo <- data.table::fread(\"http://metabolomics.helmholtz-muenchen.de/pgwas/download/probeanno.tsv\", sep=\"\\t\") traitinfo$igd_id <- paste0(\"prot-c-\", traitinfo$seqid)  suhre <- merge(suhre, traitinfo, by=\"igd_id\") save(suhre, file=\"suhre.rdata\")  load(\"suhre.rdata\") for(i in 1:nrow(suhre)) {     x <- EbiDataset$new(         ebi_id=suhre$ebi_id[i],         ftp_path=suhre$path[i],         igd_id=suhre$igd_id[i],         traitname=suhre$target[i]     )     x$download_dataset()     x$pipeline() }"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/ebi_workflow.html","id":"ebi-ignore-list","dir":"Articles","previous_headings":"","what":"EBI Ignore list","title":"EBI upload pipeline","text":"Need figure solution storing . Many EBI datasets don’t sufficient info included, need ignore instead trying upload time look new studies. ieu-ssd machine original set EBI datasets downloaded processed, first ignore list determined:","code":"library(dplyr) a <- read.csv(\"/data/ebi_gwascatalog/pmids.txt\") b <- scan(\"/data/ebi_gwascatalog/study_ids.txt\", character()) got <- ieugwasr::gwasinfo() %>% subset(., grepl(\"ebi-a\", id)) %>% {.$id} %>% gsub(\"ebi-a-\", \"\", .) a$got <- a$StudyID %in% got head(a) table(a$got) table(a$got, a$Status) ebi_ignore_list <- a$StudyID[a$Status == \"harmonised\" & !a$got] write.table(ebi_ignore_list, file=\"ebi_ignore_list.txt\", row=F, col=F, qu=F)"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"download-the-summary-dataset","dir":"Articles","previous_headings":"","what":"1. Download the summary dataset","title":"Importing datasets into OpenGWAS","text":"Need file can read R. Make sure least following columns: chromosome position beta se effect allele allele pval Optional additional columns: rsid effect allele frequency number controls (total sample size continuous trait) number cases imputation z-score imputation info score","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"initialise","dir":"Articles","previous_headings":"","what":"2. Initialise","title":"Importing datasets into OpenGWAS","text":"Need specify things e.g. dataset filename. ’ll use small example dataset bundled within package define filename object just path data file. Can also specify id want use. don’t specify just use next available id ieu-b data batch. Alternatively can visit https://api.opengwas.io/contribution/ create new dataset entering meta data, generate id used . purposes demonstration ’m going create random ID just ’re uploading dataset real, don’t , circumstances can just leave ID blank API choose next available one (make note chosen ). Now create new instance Dataset object. done following things Checked ID exists Created new temporary directory store processed data files. NOTE: end process temporary directory automatically deleted. NOTE: Just reiterate - can run x <- Dataset$new(filename=filename) without specifying igd_id argument choose next ieu-b-* ID automatically - recommended. Let’s look object: R6 object contains functions data objects. can access $ operator. e.g. find location temporary directory: check id already present database (.e. function called object initialised) can now specify","code":"filename <- system.file(package=\"GwasDataImport\", \"extdata/pos_0002.txt.gz\") id <- paste0(\"ieu-b-testing_\", as.numeric(Sys.time())) %>% gsub(\"\\\\.\", \"_\", .) x <- Dataset$new(filename=filename, igd_id=id) x x$wd x$is_new_id()"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"specify-columns-in-dataset","dir":"Articles","previous_headings":"","what":"3. Specify columns in dataset","title":"Importing datasets into OpenGWAS","text":"read data correctly, need specify column corresponds field. data looks like : can specify columns either numeric position column name. e.g. specified columns, function reads first 100 rows dataset prints summary can check look right. options ","code":"CHROM   RSID    POS     REF     ALT     MAF     BETA    SEBETA  PVAL 1       rs2462492       54676   C       T       0.399665        -0.0036 0.0197  0.07 1       rs3107975       55326   T       C       0.0089751       0.0234  0.1004  0.09 1       rs74447903      57033   T       C       0.0018298       -0.182  0.2317  0.36 1       rs114608975     86028   T       C       0.10448 -0.0372 0.0316  0.62 1       rs6702460       91536   G       T       0.45422 0.0088  0.0193  0.19 1       rs8179466       234313  C       T       0.074974        -0.017  0.0385  0.18 x$determine_columns(list(chr_col=1, snp_col=2, pos_col=3, oa_col=4, ea_col=5, eaf_col=6, beta_col=7, se_col=8, pval_col=9))"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"input-the-meta-data","dir":"Articles","previous_headings":"","what":"4. Input the meta-data","title":"Importing datasets into OpenGWAS","text":"Specify metadata. e.g. minimal example: fields can specified. can see detailed list : http://gwas-api.mrcieu.ac.uk/docs running command: see simplified version , see:","code":"x$collect_metadata(list(trait=\"hello\", build=\"HG19/GRCh37\", category=\"NA\", subcategory=\"NA\", group_name=\"public\", population=\"European\", sex=\"Males\", note='asdasd')) x$view_metadata_options() x$get_metadata_fields() x$collect_metadata(list(   trait=\"hello\",   build=\"HG19/GRCh37\",   category=\"NA\",   subcategory=\"NA\",   group_name=\"public\",   population=\"European\",   sex=\"Males\",   note='asdasd',   year='2022',   ontology='EFO:1234',   sample_size=10000,   author=\"Anon\",   unit=\"SD\") )"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"check-that-the-meta-data-are-correct","dir":"Articles","previous_headings":"","what":"5. Check that the meta-data are correct","title":"Importing datasets into OpenGWAS","text":"following tests: Compares reported effect allele frequency (eaf) column 1000 genomes super populations. Test failure indicates eaf column mis-specified. example, eaf column refers non-effect allele minor allele. Compares reported effect allele GWAS catalog. Test failure indicates effect allele column mis-specified. example, provided effect allele column actually non-effect allele column. Compares GWAS hits dataset reported associations GWAS catalog. Test failure indicates large number GWAS hits dataset absent GWAS catalog. indicative dataset post GWAS QC procedures (.e. unreliable genetic variants removed). alternative explanation new dataset just much better powered previously conducted GWAS GWAS catalog.","code":"x$check_meta_data(gwas_file=x$filename,params=x$params,metadata=x$metadata) x$metadata_test$eaf_conflicts x$metadata_test$eaf_conflicts_plot x$metadata_test$gc_conflicts x$metadata_test$gc_conflicts_plot x$metadata_test$false_positive_hits"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"process-the-summary-dataset","dir":"Articles","previous_headings":"","what":"6. Process the summary dataset","title":"Importing datasets into OpenGWAS","text":"happy columns parsed (step 3) confident meta-data correct (steps 4 & 5), dataset can processed. involves Checking none meta-data tests failed. stop effect allele frequency effect alleles columns look wrong. Reading dataset Checking fields (quite light check) Removing rows missing values required fields Updating build hg19/b37 necessary Writing processed dataset file, ready upload Calculate md5 checksum achieved using: Please provide much accurate metadata possible","code":"x$format_dataset() x$get_metadata_fields() %>% as.data.frame()"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"upload-meta-data","dir":"Articles","previous_headings":"","what":"6. Upload meta-data","title":"Importing datasets into OpenGWAS","text":"meta-data entered, can uploaded: see something like printed screen: Note Status 200 - indicates upload successful. receive 4xx 5xx number something gone wrong, check VPN connection, formatting errors data. might get information running: Another thing note meta-data upload won’t work meta-data tests failed (get error message happens). happens effect allele effect allele frequency columns look wrong. Another thing note might want edit meta data already uploaded . Re-run collect_metadata method updated metadata, re-upload data must use api_metadata_edit function. try re-run api_metadata_upload function give error saying ID already exists. error metadata perhaps easiest thing just delete re-upload e.g.  make edits metadata e.g. ’m going change author reupload etc using x$api_metadata_upload()","code":"x$api_metadata_upload() Response [http://ieu-db-interface.epi.bris.ac.uk:8082/edit/add]   Date: 2020-10-21 17:43   Status: 200   Content-Type: application/json   Size: 19 B {\"id\": \"ieu-b-testing_1603302296_67257\"} x$metadata_upload_status %>% httr::content() x$api_metadata_delete() x$collect_metadata(list(   trait=\"hello\",   build=\"HG19/GRCh37\",   category=\"NA\",   subcategory=\"NA\",   group_name=\"public\",   population=\"European\",   sex=\"Males\",   note='asdasd',   year='2022',   ontology='EFO:1234',   sample_size=10000,   author=\"Mous A\",   unit=\"SD\") )"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"upload-processed-summary-dataset","dir":"Articles","previous_headings":"","what":"7. Upload processed summary dataset","title":"Importing datasets into OpenGWAS","text":"Similar step , upload actual GWAS data: number checks including verifying dataset received md5 checksum stated upload. Another thing note gwasdata upload stop meta-data tests failed (get error message happens). happens effect allele effect allele frequency columns look wrong. see something like printed screen: Note Status - 201 meaning successful upload. receive 4xx 5xx number something gone wrong, check VPN connection, formatting errors data. might get information running:","code":"x$api_gwasdata_upload() Successfully uploaded GWAS data Response [http://ieu-db-interface.epi.bris.ac.uk:8082/edit/upload]   Date: 2020-10-23 08:35   Status: 201   Content-Type: application/json   Size: 83 B {\"message\": \"Upload successful\", \"job_id\": \"5db0e832-df20-4fb9-a1ce-d829af7a7... x$gwasdata_upload_status %>% httr::content()"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"wait-for-the-api-pipeline-to-convert-to-vcf-format-annotate-and-create-a-report","dir":"Articles","previous_headings":"","what":"8. Wait for the API pipeline to convert to VCF format, annotate and create a report","title":"Importing datasets into OpenGWAS","text":"uploaded, dataset go processing pipeline server. large datasets take 1 hour. Please visit https://api.opengwas.io/contribution/ check status pipeline. QC process completed generate report. View report check everything looks expected. go release process website. ’s uploaded released able query . e.g. can get tophits: Can extract SNPs (e.g. 2015 GIANT BMI SNPs) dataset appear https://gwas.mrcieu.ac.uk/ within day two, synchronisation API website isn’t immediate.","code":"ieugwasr::tophits(id) ieugwasr::associations(tophits('ieu-a-2')$rsid, id)"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Importing datasets into OpenGWAS","text":"Run pipeline:","code":"x <- Dataset$new(filename=fn, igd_id=id) x$determine_columns(list(chr_col=1, snp_col=2, pos_col=3, oa_col=4, ea_col=5, eaf_col=6, beta_col=7, se_col=8, pval_col=9)) x$format_dataset() x$collect_metadata(list(trait=\"hello\", build=\"HG19/GRCh37\", category=\"NA\", subcategory=\"NA\", group_name=\"public\", population=\"European\", sex=\"Males\", note='asdasd')) x$api_metadata_upload() x$api_gwasdata_upload()"},{"path":"https://mrcieu.github.io/GwasDataImport/articles/import_pipeline.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Importing datasets into OpenGWAS","text":"","code":"library(GwasDataImport) library(data.table) library(tidyr)  fn <- \"~/Downloads/1KG_CRP_GWAS_AJHG_2018.txt.gz\" a <- fread(fn, he=T) a <- tidyr::separate(a, \"MarkerName\", sep=\":\", into=c(\"chr\", \"pos\", \"type\")) a$pval <- pnorm(abs(a$Effect) / a$StdErr, lower.tail=FALSE) * 2  # Note that if your dataset doesn't have chr/pos then you can look them up using # cp <- get_positions(a$MarkerName) # it's a bit slow though  a$Allele2[a$Allele1==\"d\"] <- \"i\" a$Allele2[a$Allele1==\"i\"] <- \"d\" table(a$Allele1) table(a$Allele2)  a <- dplyr::select(a, chr, pos, Allele1, Allele2, Effect, StdErr, pval) write.table(a, file=\"crp.txt\", row=F, col=T, qu=F)  x <- Dataset$new(filename=\"crp.txt\")  # Specify columns x$determine_columns(list(chr_col=1, pos_col=2, oa_col=4, ea_col=3, beta_col=5, se_col=6, pval_col=7)) # Process dataset x$format_dataset()  # Input metadata x$collect_metadata(list(trait=\"C-reactive protein\", build=\"HG19/GRCh37\", category=\"Continuous\", subcategory=\"NA\", group_name=\"public\", population=\"European\", sex=\"Males and Females\", ontology=\"EFO_0004458\", pmid=\"30388399\", sample_size=204402, priority=1))  # Upload metadata x$api_metadata_upload()  # Upload summary data x$api_gwasdata_upload()  # delete wd x$delete_wd()"},{"path":"https://mrcieu.github.io/GwasDataImport/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gibran Hemani. Author, maintainer. Philip Haycock. Author. Tom Palmer. Author.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hemani G, Haycock P, Palmer T (2024). GwasDataImport: Import EBI Data OpenGWAS. R package version 0.1.2.","code":"@Manual{,   title = {GwasDataImport: Import EBI Data to OpenGWAS},   author = {Gibran Hemani and Philip Haycock and Tom Palmer},   year = {2024},   note = {R package version 0.1.2}, }"},{"path":"https://mrcieu.github.io/GwasDataImport/index.html","id":"gwasdataimport","dir":"","previous_headings":"","what":"Import EBI Data to OpenGWAS","title":"Import EBI Data to OpenGWAS","text":"goal GwasDataImport simplify importing GWAS summary data OpenGWAS database. also automates import EBI datasets. Documentation including tutorials examples : https://mrcieu.github.io/GwasDataImport","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Import EBI Data to OpenGWAS","text":"","code":"# install.packages(\"remotes\") remotes::install_github(\"MRCIEU/GwasDataImport\")"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Object downloads, develops uploads GWAS summary datasets IEU OpenGWAS database Object downloads, develops uploads GWAS summary datasets IEU OpenGWAS database","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"filename Path raw GWAS summary dataset igd_id ID use upload. NULL next available ID batch ieu-b used automatically wd Work directory save processed files. deleted upon completion gwas_out path processed summary file nsnp_read Number SNPs read initially nsnp Number SNPs retained reading metadata List meta-data entries metadata_test List outputs tests effect allele, effect allele frequency columns summary data using CheckSumStats metadata_file Path meta-data json file datainfo List GWAS file parameters datainfo_file Path datainfo json file params Initial column identifiers specified raw dataset metadata_uploaded TRUE/FALSE whether metadata uploaded gwasdata_uploaded TRUE/FALSE whether gwas data uploaded metadata_upload_status Response server upload process gwasdata_upload_status Response server upload process","code":""},{"path":[]},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Dataset$new() Dataset$is_new_id() Dataset$delete_wd() Dataset$set_wd() Dataset$se_from_bp() Dataset$determine_columns() Dataset$format_dataset() Dataset$view_metadata_options() Dataset$get_gwasdata_fields() Dataset$get_metadata_fields() Dataset$collect_metadata() Dataset$check_meta_data() Dataset$write_metadata() Dataset$api_metadata_upload() Dataset$api_metadata_edit() Dataset$api_metadata_check() Dataset$api_metadata_delete() Dataset$api_gwasdata_upload() Dataset$api_gwasdata_check() Dataset$api_gwasdata_delete() Dataset$api_qc_status() Dataset$api_report() Dataset$api_gwas_release() Dataset$clone()","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Initialise","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$new(filename = NULL, wd = tempdir(), igd_id = NULL)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"filename Path raw GWAS summary data file wd Path directory use working directory. deleted upon completion - best keep default randomly generated temporary directory igd_id Option provide specified ID upload. none provided use next ieu-batch ID","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"new ObtainEbiDataset object","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-is-new-id-","dir":"Reference","previous_headings":"","what":"Method is_new_id()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Check specified ID unique within database. checks published GWASs currently processed","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$is_new_id(id = self$igd_id)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"id ID check","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-delete-wd-","dir":"Reference","previous_headings":"","what":"Method delete_wd()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Delete working directory","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$delete_wd()"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-set-wd-","dir":"Reference","previous_headings":"","what":"Method set_wd()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Set working directory (creates)","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$set_wd(wd)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"wd working directory","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-se-from-bp-","dir":"Reference","previous_headings":"","what":"Method se_from_bp()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Estimate standard error beta p-value","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$se_from_bp(beta, pval, minp = 1e-300)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"beta Effect size pval p-value minp Minimum p-value cutoff default = 1e-300","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-determine-columns-","dir":"Reference","previous_headings":"","what":"Method determine_columns()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Specify columns dataset correspond fields.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$determine_columns(params, nrows = 100, gwas_file = self$filename, ...)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"params List column identifiers. Identifiers can numeric position column header name. Required columns : c(\"chr_col\", \"pos_col\", \"ea_col\", \"oa_col\", \"beta_col\", \"se_col\", \"pval_col\",\"rsid_col\"). Optional columns : c(\"snp_col\", \"eaf_col\", \"oaf_col\", \"ncase_col\", \"imp_z_col\", \"imp_info_col\", \"ncontrol_col\"). nrows many rows read check parameters specified correctly gwas_file Filename read ... arguments pass data.table::fread order correctly read dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-format-dataset-","dir":"Reference","previous_headings":"","what":"Method format_dataset()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Process dataset ready uploading. Determins build lifts hg19/b37 necessary.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$format_dataset(   gwas_file = self$filename,   gwas_out = file.path(self$wd, \"format.txt.gz\"),   params = self$params,   metadata_test = self$metadata_test,   ... )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"gwas_file GWAS filename gwas_out Filename save processed dataset params Column specifications (see determine_columns info) metadata_test List outputs tests effect allele, effect allele frequency columns summary data using CheckSumStats ... arguments pass data.table::fread order correctly read dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-view-metadata-options-","dir":"Reference","previous_headings":"","what":"Method view_metadata_options()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"View specifications available meta data fields, taken http://gwas-api.mrcieu.ac.uk/docs","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$view_metadata_options()"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-get-gwasdata-fields-","dir":"Reference","previous_headings":"","what":"Method get_gwasdata_fields()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Get list GWAS data fields whether required","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$get_gwasdata_fields()"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"data.frame","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-get-metadata-fields-","dir":"Reference","previous_headings":"","what":"Method get_metadata_fields()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Get list metadata fields whether required","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$get_metadata_fields()"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"data.frame","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-collect-metadata-","dir":"Reference","previous_headings":"","what":"Method collect_metadata()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Input metadata","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$collect_metadata(metadata, igd_id = self$igd_id)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"metadata List meta-data fields values, see view_metadata_options fields need inputted. igd_id ID used uploading database","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-check-meta-data-","dir":"Reference","previous_headings":"","what":"Method check_meta_data()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Check reported effect allele effect allele frequency columns correct.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$check_meta_data(   gwas_file = self$filename,   params = self$params,   metadata = self$metadata )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"gwas_file Filename read params column names x$determine_columns(). Required columns : c(\"snp_col\", \"ea_col\", \"oa_col\", \"eaf_col\" ) metadata metadata x$collect_metadata()","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-write-metadata-","dir":"Reference","previous_headings":"","what":"Method write_metadata()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Write meta data json file","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$write_metadata(   metadata = self$metadata,   datainfo = self$datainfo,   outdir = self$wd )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"metadata List meta data fields values datainfo List data column parameters outdir Output directory write json files","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-metadata-upload-","dir":"Reference","previous_headings":"","what":"Method api_metadata_upload()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Upload meta data API","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_metadata_upload(   metadata = self$metadata,   metadata_test = self$metadata_test,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"metadata List meta data fields values metadata_test List outputs tests effect allele, effect allele frequency columns summary data using CheckSumStats access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-metadata-edit-","dir":"Reference","previous_headings":"","what":"Method api_metadata_edit()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Upload meta data API","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_metadata_edit(   metadata = self$metadata,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"metadata List meta data fields values access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-metadata-check-","dir":"Reference","previous_headings":"","what":"Method api_metadata_check()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"View meta-data","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_metadata_check(   id = self$igd_id,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"id ID check access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-metadata-delete-","dir":"Reference","previous_headings":"","what":"Method api_metadata_delete()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Delete dataset. deletes metadata uploaded GWAS data (related processing files)","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_metadata_delete(   id = self$igd_id,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"id ID delete access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-gwasdata-upload-","dir":"Reference","previous_headings":"","what":"Method api_gwasdata_upload()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Upload gwas dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_gwasdata_upload(   datainfo = self$datainfo,   gwasfile = self$gwas_out,   metadata_test = self$metadata_test,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"datainfo List data column parameters gwasfile Path processed gwasfile metadata_test List outputs tests effect allele, effect allele frequency columns summary data using CheckSumStats access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-gwasdata-check-","dir":"Reference","previous_headings":"","what":"Method api_gwasdata_check()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Check status API processing pipeline","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_gwasdata_check(   id = self$igd_id,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"id ID check access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-gwasdata-delete-","dir":"Reference","previous_headings":"","what":"Method api_gwasdata_delete()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Delete dataset. deletes metadata uploaded GWAS data (related processing files)","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_gwasdata_delete(   id = self$igd_id,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"id ID delete access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-qc-status-","dir":"Reference","previous_headings":"","what":"Method api_qc_status()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Check status GWAS QC processing pipeline","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_qc_status(   id = self$igd_id,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"id ID delete access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-report-","dir":"Reference","previous_headings":"","what":"Method api_report()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"View html report processed dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_report(   id = self$igd_id,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"id ID report view access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-api-gwas-release-","dir":"Reference","previous_headings":"","what":"Method api_gwas_release()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"Release dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$api_gwas_release(   comments = NULL,   passed_qc = \"True\",   id = self$igd_id,   access_token = ieugwasr::check_access_token() )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"comments Optional comments provide uploading passed_qc True False id ID release access_token Google OAuth2.0 token. See ieugwasr documentation info","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"objects class cloneable method.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"","code":"Dataset$clone(deep = FALSE)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/Dataset.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads GWAS summary datasets for IEU OpenGWAS database — Dataset","text":"deep Whether make deep clone.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Object that downloads, develops and uploads EBI dataset — EbiDataset","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"Object downloads, develops uploads EBI dataset Object downloads, develops uploads EBI dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"GwasDataImport::Dataset -> EbiDataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"ebi_id EBI ID look traitname Name trait ftp_path Path files EBI FTP or_flag TRUE/FALSE convert beta gwas_out1 Path first look EBI dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"GwasDataImport::Dataset$api_gwas_release() GwasDataImport::Dataset$api_gwasdata_check() GwasDataImport::Dataset$api_gwasdata_delete() GwasDataImport::Dataset$api_gwasdata_upload() GwasDataImport::Dataset$api_metadata_check() GwasDataImport::Dataset$api_metadata_delete() GwasDataImport::Dataset$api_metadata_edit() GwasDataImport::Dataset$api_metadata_upload() GwasDataImport::Dataset$api_qc_status() GwasDataImport::Dataset$api_report() GwasDataImport::Dataset$check_meta_data() GwasDataImport::Dataset$collect_metadata() GwasDataImport::Dataset$delete_wd() GwasDataImport::Dataset$determine_columns() GwasDataImport::Dataset$format_dataset() GwasDataImport::Dataset$get_gwasdata_fields() GwasDataImport::Dataset$get_metadata_fields() GwasDataImport::Dataset$is_new_id() GwasDataImport::Dataset$se_from_bp() GwasDataImport::Dataset$set_wd() GwasDataImport::Dataset$view_metadata_options() GwasDataImport::Dataset$write_metadata()","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"EbiDataset$new() EbiDataset$download_dataset() EbiDataset$format_ebi_dataset() EbiDataset$organise_metadata() EbiDataset$pipeline() EbiDataset$clone()","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"Initialise object","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"","code":"EbiDataset$new(   ebi_id,   wd = tempdir(),   ftp_path = NULL,   igd_id = paste0(\"ebi-a-\", ebi_id),   traitname = NULL )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"ebi_id e.g. GCST005522 wd Directory download develop dataset. Default=tempdir(). Deleted automatically upon object removal ftp_path Pre-specified path data. Default=NULL igd_id Defaults \"ebi--<ebi_id>\" traitname Option provide traitname dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"new EbiDataset object","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"method-download-dataset-","dir":"Reference","previous_headings":"","what":"Method download_dataset()","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"Download","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"","code":"EbiDataset$download_dataset(   ftp_path = self$ftp_path,   ftp_url = options()$ebi_ftp_url,   outdir = self$wd )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"ftp_path Pre-specified path data. Default=self$ftp_path ftp_url Default=options()$ebi_ftp_url outdir Default=self$wd","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"method-format-ebi-dataset-","dir":"Reference","previous_headings":"","what":"Method format_ebi_dataset()","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"organise data formatting. slow really matter","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"","code":"EbiDataset$format_ebi_dataset(   filename = self$filename,   output = file.path(self$wd, \"step1.txt.gz\") )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"filename Filename GWAS dataset output save formatted dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"method-organise-metadata-","dir":"Reference","previous_headings":"","what":"Method organise_metadata()","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"Download parse metadata","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"","code":"EbiDataset$organise_metadata(   ebi_id = self$ebi_id,   or_flag = self$or_flag,   igd_id = self$igd_id,   units = NULL,   sex = \"NA\",   category = \"NA\",   subcategory = \"NA\",   build = \"HG19/GRCh37\",   group_name = \"public\",   traitname = self$traitname )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"ebi_id Default=self$ebi_id or_flag Default=self$or_flag igd_id Default=NULL units Default=NULL sex Default=\"NA\" category Default=\"NA\" subcategory Default=\"NA\" build Default=\"HG19/GRCh37\" group_name Default=\"public\" traitname Default=self$traitname","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"method-pipeline-","dir":"Reference","previous_headings":"","what":"Method pipeline()","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"initialised function string together everything .e. downloading, processing uploading","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"","code":"EbiDataset$pipeline()"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"objects class cloneable method.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"","code":"EbiDataset$clone(deep = FALSE)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/EbiDataset.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object that downloads, develops and uploads EBI dataset — EbiDataset","text":"deep Whether make deep clone.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/being_processed.html","id":null,"dir":"Reference","previous_headings":"","what":"being_processed — being_processed","title":"being_processed — being_processed","text":"List EBI datasets currently processed","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/being_processed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"being_processed — being_processed","text":"","code":"being_processed(dat)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/being_processed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"being_processed — being_processed","text":"dat Output determine_new_datasets","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/being_processed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"being_processed — being_processed","text":"Updated dat","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/create_build_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dataset of some hm3 SNPs and their build positions — create_build_reference","title":"Create dataset of some hm3 SNPs and their build positions — create_build_reference","text":"Create dataset hm3 SNPs build positions","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/create_build_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dataset of some hm3 SNPs and their build positions — create_build_reference","text":"","code":"create_build_reference()"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/create_build_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create dataset of some hm3 SNPs and their build positions — create_build_reference","text":"saves build_ref object","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/create_marts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create marts for b36-38 — create_marts","title":"Create marts for b36-38 — create_marts","text":"Slow create just make save","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/create_marts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create marts for b36-38 — create_marts","text":"","code":"create_marts()"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/create_marts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create marts for b36-38 — create_marts","text":"Saves data data/marts.rdata","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine build based on reference dataset — determine_build","title":"Determine build based on reference dataset — determine_build","text":"Determine build based reference dataset","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine build based on reference dataset — determine_build","text":"","code":"determine_build(rsid, chr, pos, build = c(37, 38, 36), fallback = \"position\")"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine build based on reference dataset — determine_build","text":"rsid rsid chr chr pos pos build Builds try e.g. c(37,38,36) fallback Whether try \"position\" (fast) \"biomart\" (accurate rsids) based approaches instead","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine build based on reference dataset — determine_build","text":"build detected, dataframe matches ","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build_biomart.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines which build a set of SNPs are on — determine_build_biomart","title":"Determines which build a set of SNPs are on — determine_build_biomart","text":"Determines build set SNPs ","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build_biomart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines which build a set of SNPs are on — determine_build_biomart","text":"","code":"determine_build_biomart(rsid, chr, pos, build = c(37, 38, 36))"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build_biomart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines which build a set of SNPs are on — determine_build_biomart","text":"rsid rsid chr chr pos pos build Builds try e.g. c(37,38,36)","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build_biomart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines which build a set of SNPs are on — determine_build_biomart","text":"build detected, dataframe matches ","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine build just from positions — determine_build_position","title":"Determine build just from positions — determine_build_position","text":"bit sketchy computationally fast - just assumes least 50x position matches true build either others.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine build just from positions — determine_build_position","text":"","code":"determine_build_position(pos, build = c(37, 38, 36))"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine build just from positions — determine_build_position","text":"pos Vector positions build c(37,38,36)","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_build_position.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine build just from positions — determine_build_position","text":"build determined dataframe","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_new_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"determine_new_datasets — determine_new_datasets","title":"determine_new_datasets — determine_new_datasets","text":"Figure datasets present database","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_new_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"determine_new_datasets — determine_new_datasets","text":"","code":"determine_new_datasets(   ebi_ftp_url = options()$ebi_ftp_url,   blacklist = NULL,   exclude_multi_datasets = TRUE )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_new_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"determine_new_datasets — determine_new_datasets","text":"ebi_ftp_url FTP url default=options()$ebi_ftp_url blacklist List EBI datasets ignore default=NULL exclude_multi_datasets EBI ID one dataset ignored","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/determine_new_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"determine_new_datasets — determine_new_datasets","text":"data frame","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/ebi_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"ebi_datasets — ebi_datasets","title":"ebi_datasets — ebi_datasets","text":"Convert output listftp something easier read","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/ebi_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ebi_datasets — ebi_datasets","text":"","code":"ebi_datasets(ebi_ftp_url = options()$ebi_ftp_url)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/ebi_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ebi_datasets — ebi_datasets","text":"ebi_ftp_url EBI FTP default=options()$ebi_ftp_url","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/ebi_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ebi_datasets — ebi_datasets","text":"data frame","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/get_ftp_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get harmonised file for specific EBI ID — get_ftp_path","title":"Get harmonised file for specific EBI ID — get_ftp_path","text":"Get harmonised file specific EBI ID","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/get_ftp_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get harmonised file for specific EBI ID — get_ftp_path","text":"","code":"get_ftp_path(ebi_id, ebi_ftp_url = options()$ebi_ftp_url)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/get_ftp_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get harmonised file for specific EBI ID — get_ftp_path","text":"ebi_id EBI ID e.g. GCST000879 ebi_ftp_url EBI FTP default=options()$ebi_ftp_url","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/get_ftp_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get harmonised file for specific EBI ID — get_ftp_path","text":"ftp path (excluding server)","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/get_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup positions for given rsids in particular build — get_positions","title":"Lookup positions for given rsids in particular build — get_positions","text":"Lookup positions given rsids particular build","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/get_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup positions for given rsids in particular build — get_positions","text":"","code":"get_positions(   rsid,   build = 37,   method = c(\"opengwas\", \"biomart\")[1],   splitsize = 50000 )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/get_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup positions for given rsids in particular build — get_positions","text":"rsid rsid build build (36, 37 default 38) method \"opengwas\" (fastest) \"biomart\" splitsize Default 50000","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/get_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup positions for given rsids in particular build — get_positions","text":"data frame","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/liftover_gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Liftover GWAS positions — liftover_gwas","title":"Liftover GWAS positions — liftover_gwas","text":"Determine GWAS build liftover required build","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/liftover_gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Liftover GWAS positions — liftover_gwas","text":"","code":"liftover_gwas(   dat,   build = c(37, 38, 36),   to = 37,   chr_col = \"chr\",   pos_col = \"pos\",   snp_col = \"snp\",   ea_col = \"ea\",   oa_col = \"oa\",   build_fallback = \"position\" )"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/liftover_gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Liftover GWAS positions — liftover_gwas","text":"dat Data frame chr, pos, snp name, effect allele, non-effect allele columns build possible builds check data Default = c(37,38,26) build lift . Default=37 chr_col Name chromosome column name. Required pos_col Name position column name. Required snp_col Name SNP column name. Optional. Uses less certain method matching available ea_col Name effect allele column name. Optional. Might lead duplicated rows presented oa_col Name allele column name. Optional. Might lead duplicated rows presented build_fallback Whether try \"position\" (fast) \"biomart\" (accurate rsids) based approaches instead","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/liftover_gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Liftover GWAS positions — liftover_gwas","text":"Data frame","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/listftp.html","id":null,"dir":"Reference","previous_headings":"","what":"listftp — listftp","title":"listftp — listftp","text":"List files EBI FTP server","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/listftp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"listftp — listftp","text":"","code":"listftp(url = options()$ebi_ftp_url, recursive = TRUE)"},{"path":"https://mrcieu.github.io/GwasDataImport/reference/listftp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"listftp — listftp","text":"url FTP url look recursive false just top directory, otherwise list recursively","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/listftp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"listftp — listftp","text":"Vector paths","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://mrcieu.github.io/GwasDataImport/news/index.html","id":"gwasdataimport-012","dir":"Changelog","previous_headings":"","what":"GwasDataImport 0.1.2","title":"GwasDataImport 0.1.2","text":"Added integration MRCIEU/CheckSumStats package Various fixes code accompanying pkgdown site","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/news/index.html","id":"gwasdataimport-011","dir":"Changelog","previous_headings":"","what":"GwasDataImport 0.1.1","title":"GwasDataImport 0.1.1","text":"Added NEWS.md file track changes package. Improving documentation Work API cromwell pipelines Added checks upload Various bug fixes","code":""},{"path":"https://mrcieu.github.io/GwasDataImport/news/index.html","id":"gwasdataimport-010","dir":"Changelog","previous_headings":"","what":"GwasDataImport 0.1.0","title":"GwasDataImport 0.1.0","text":"First experimental version ","code":""}]
